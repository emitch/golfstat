import os, sys, scipy
import numpy as np
import matplotlib.pyplot as plt
import sklearn.linear_model as lreg

def rank_correlation(stats, rankings):
	""" calculate the correlation coefficient of each stat with each
	ranking and return them all """
	# get dimensions
	n_stats = stats.shape[1]
	n_rankings = rankings.shape[1]

	# get correlation of each stat/ranking combination
	corr = np.empty([n_stats, n_rankings])
	for i in range(n_stats):
		for j in range(n_rankings):
			corr[i,j], _ = scipy.stats.spearmanr(stats[:,i], rankings[:,j])

	return corr

# main
if __name__ == "__main__":
	# Load data generated by main() of parsedata.py
	if not os.path.isfile('stats.csv'):
		import parsedata
		print('Calling main() from parsedata')
		parsedata.main()

	stats = np.genfromtxt('stats.csv', delimiter=',', dtype=float)
	ranks = np.genfromtxt('ranks.csv', delimiter=',', dtype=float)

	# calculate correlations
	corr = rank_correlation(stats, ranks)

	print(corr)